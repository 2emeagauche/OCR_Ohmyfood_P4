@use "../abstracts/variables" as v;
@use '../abstracts/mixins' as mx;

.cta {
  @include mx.center-by-flex;
  color: v.$light-col;
  font-size: 1rem;
  font-weight: 500;
  position: relative;
  .cta__text{
    background: v.$btn-bg;
    @include mx.button-like(2rem, 0px, 4px, 10px, 0.25);
    padding: 1rem 1.5rem;
    transition: box-shadow 200ms;
  }
  &::before{
    @include mx.before-after;
    @include mx.button-like(2rem, 0px, 0px, 0px, 0);
    background-color: white;
    opacity: 0;
    transition: opacity 400ms;
  }
  &:hover {
    .cta__text {
      @include mx.button-like(2rem, 0px, 4px, 15px, 0.35);
    }
    &::before {
      opacity: 0.15;
    }
  }
}

// restaurants
.liking {
  width: 2.4rem;
  height: 2.4rem;
  cursor: pointer;
  @include mx.center-by-flex;
  align-self: baseline;
  position: relative;
  &::before {
    @include mx.before-after;
    background-image: url('../images/icons/like-icon.png');
    background-repeat: no-repeat;
    background-position: center center;
    transform: scale(0%);
    transition: transform 300ms cubic-bezier(.78,0,.61,1.28);
  }
  img {
    opacity: 1;
    transition: opacity 300ms cubic-bezier(.78,0,.61,1.28);
  }
  &:hover {
    &::before {
      transform: scale(100%);
    }
    img {
      opacity: 0;
    }
  }
}

.dish {
  @include mx.button-like($sdwAlpha: 0.1);
  width: 100%;
  padding: 0.938rem;
  margin-bottom: 0.75rem;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  h3 {
    font-size: v.$fz-2;
    font-weight: 500;
    padding-bottom: 0.2rem;
  }
  p {
    font-size: v.$fz-4;
  }
  & &__price {
    font-size: v.$fz-4;
    font-weight: 700;
    color: v.$dark-col;
  }
  &__content {
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    column-gap: 1rem;
    padding-right: 0;
    transition: padding-right 300ms cubic-bezier(.98,.16,.57,1.2);
  }
  &__description {
    flex: 1 1 auto;
    width: calc(100% - v.$dish-status-width);
    & > * {
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }
  }
  &__status {
    @include mx.center-by-flex;
    position: absolute;
    transform: translateX(v.$dish-status-width);
    transition: transform 300ms cubic-bezier(.98,.16,.57,1.2);
    top: 0;
    bottom: 0;
    right: 0;
    width: v.$dish-status-width;
    background: v.$third-col;
  }
  &:hover {
    .dish__content {
      padding-right: v.$dish-status-width;
    }
    .dish__status {
      transform: translateX(0);
    }
  }
}