@use '../abstracts/variables' as v;
@use '../abstracts/mixins' as mx;



.page-restaurant {

  main {
    position: relative;
    padding-top: 230px;
  }

  .illustration {
    width: 100%;
    height: 275px;
    object-fit: cover;
    position: absolute;
    top: 0;
    z-index: 0;
  }

  .presentation {
    padding-top: 2rem;
    padding-bottom: 2rem;
    position: relative;
    z-index: 1;
    background-color: v.$main-bg-col;
    border-radius: 2.5rem 2.5rem 0 0;

    &__parent {
      display: flex;
      justify-content: space-between;
      align-items: center;
      column-gap: 1rem;
      padding-right: 1rem;
    }

    &__title {
      width: auto;
      margin: 0;
      line-height: 2rem;
    }
  }
}

.menu__section {
  margin-bottom: 1.75rem;
  background-color: v.$main-bg-col;
  h2 {
    font-size: 1rem;
    font-weight: 300;
    text-transform: uppercase;
    position: relative;
    padding-bottom: 0.7rem;
    margin-bottom: 0.75rem;
    &::after {
      content: '';
      width: 2.5rem;
      height: 3px;
      background-color: v.$third-col;
      position: absolute;
      bottom: 0;
      left: 0;
    }
  }
}

.maincourses {
  // transform: translateY(calc(-3 * v.$translateY-unit));
  animation: maincourses calc(3*v.$timing-unit / 2);
  animation-delay: calc(6*v.$timing-unit / 2);
  animation-fill-mode: backwards;
  animation-timing-function: cubic-bezier(.59,0,.76,1);
}

.desserts {
  // transform: translateY(calc(-6 * v.$translateY-unit));
  animation: desserts calc(6*v.$timing-unit / 2);
  animation-delay: calc(3*v.$timing-unit / 2);
  animation-fill-mode: backwards;
  animation-timing-function: cubic-bezier(.59,0,.76,1);
}

.dish {
  // transform: perspective(1500px) rotateX(90deg);
  @for $i from 1 through 9 {
    &--#{$i} {
      animation-delay: calc(($i - 1)*v.$timing-unit / 2);
    }
  }
  animation: dish v.$timing-unit;
  animation-fill-mode: backwards;
  animation-timing-function: ease-in-out;
}